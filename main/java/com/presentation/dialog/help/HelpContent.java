package com.presentation.dialog.help;

import java.util.Arrays;
import java.util.List;

public final class HelpContent {

    private HelpContent() {}

    public static List<ShortcutGroup> getShortcuts() {
        return Arrays.asList(
                new ShortcutGroup("üìÅ Menu Arquivo (Alt+A)", HelpStyles.PRIMARY_COLOR, Arrays.asList(
                        new Shortcut("A", "Abrir arquivo de texto"),
                        new Shortcut("F", "Fechar arquivo atual")
                )),
                new ShortcutGroup("‚öôÔ∏è Menu Configura√ß√£o (Alt+C)", HelpStyles.WARNING_COLOR, Arrays.asList(
                        new Shortcut("P", "Configurar padr√µes de anima√ß√£o"),
                        new Shortcut("O", "Configurar cores personalizadas"),
                        new Shortcut("V", "Configurar velocidade das anima√ß√µes")
                )),
                new ShortcutGroup("‚ùì Menu Ajuda (Alt+J)", HelpStyles.SUCCESS_COLOR, Arrays.asList(
                        new Shortcut("A", "Abrir esta janela de ajuda"),
                        new Shortcut("S", "Informa√ß√µes detalhadas do projeto")
                ))
        );
    }

    public static List<String> getGettingStarted() {
        return Arrays.asList(
                "1. Use Alt+A para abrir um arquivo de texto (.txt, .md, .log)",
                "2. O conte√∫do ser√° exibido na √°rea central com scroll autom√°tico",
                "3. Use F para fechar o arquivo e voltar √† anima√ß√£o de fundo",
                "4. Configure a anima√ß√£o usando Alt+C para acessar as op√ß√µes",
                "5. P permite escolher diferentes padr√µes de anima√ß√£o",
                "6. O personaliza as cores da anima√ß√£o em tempo real",
                "7. V ajusta a velocidade da anima√ß√£o",
                "8. A barra de status mostra informa√ß√µes sobre as a√ß√µes realizadas",
                "9. Use Alt+J para acessar esta ajuda a qualquer momento"
        );
    }

    public static List<FeatureHelp> getFeatures() {
        return Arrays.asList(
                new FeatureHelp("üìÇ Visualiza√ß√£o de Arquivos", HelpStyles.PRIMARY_COLOR, Arrays.asList(
                        "Suporte completo a arquivos de texto (.txt, .md, .log)",
                        "Detec√ß√£o autom√°tica de codifica√ß√£o de caracteres",
                        "Scroll suave para arquivos grandes",
                        "Quebra de linha autom√°tica para melhor leitura",
                        "√Årea de t√≠tulo mostra o nome do arquivo aberto",
                        "Valida√ß√£o de tipos de arquivo suportados"
                )),
                new FeatureHelp("üé® Anima√ß√£o de Fundo", HelpStyles.INFO_COLOR, Arrays.asList(
                        "Execu√ß√£o em thread separada para performance",
                        "M√∫ltiplos padr√µes de anima√ß√£o dispon√≠veis",
                        "Cores personaliz√°veis em tempo real",
                        "Controle de velocidade din√¢mico",
                        "N√£o interfere na leitura de arquivos",
                        "Otimizado para diferentes resolu√ß√µes de tela"
                )),
                new FeatureHelp("üñ•Ô∏è Interface Responsiva", HelpStyles.SUCCESS_COLOR, Arrays.asList(
                        "Redimensionamento autom√°tico de componentes",
                        "Menus com atalhos de teclado intuitivos",
                        "Barra de status informativa",
                        "Navega√ß√£o por teclado completa",
                        "Feedback visual para todas as a√ß√µes",
                        "Design moderno e profissional"
                ))
        );
    }

    public static List<String> getTroubleshooting() {
        return Arrays.asList(
                "‚ùì Arquivo n√£o abre:",
                "  ‚Ä¢ Verifique se √© um arquivo de texto v√°lido (.txt, .md, .log)",
                "  ‚Ä¢ Confirme se o arquivo n√£o est√° sendo usado por outro programa",
                "  ‚Ä¢ Tente um arquivo menor para teste",
                "",
                "‚ùì Anima√ß√£o est√° lenta:",
                "  ‚Ä¢ Use Ctrl+Shift+S para aumentar a velocidade",
                "  ‚Ä¢ Feche outros programas que consomem muita CPU",
                "  ‚Ä¢ Reinicie a aplica√ß√£o se necess√°rio",
                "",
                "‚ùì Menu n√£o responde:",
                "  ‚Ä¢ Use os atalhos Alt+A, Alt+C, Alt+J diretamente",
                "  ‚Ä¢ Clique em uma √°rea vazia da janela e tente novamente",
                "  ‚Ä¢ Verifique se caps lock n√£o est√° ativado",
                "",
                "‚ùì Aplica√ß√£o trava:",
                "  ‚Ä¢ Use Alt+S para sair com seguran√ßa",
                "  ‚Ä¢ Force o encerramento se necess√°rio (Ctrl+Alt+T no Linux/Ctrl+Shift+Esc no Windows)",
                "  ‚Ä¢ Reinicie a aplica√ß√£o",
                "",
                "‚ùì Cores est√£o estranhas:",
                "  ‚Ä¢ Use Alt+O para resetar as configura√ß√µes de cor",
                "  ‚Ä¢ Tente diferentes padr√µes com Alt+P",
                "  ‚Ä¢ Reinicie a aplica√ß√£o para configura√ß√µes padr√£o"
        );
    }

    public static List<String> getTips() {
        return Arrays.asList(
                "üí° Use Alt+F para voltar rapidamente √† anima√ß√£o ap√≥s ler um arquivo",
                "üí° Experimente diferentes combina√ß√µes de padr√µes e cores para personalizar",
                "üí° A anima√ß√£o continua executando em segundo plano mesmo com arquivo aberto",
                "üí° Arquivos grandes podem demorar alguns segundos para carregar completamente",
                "üí° Use a barra de rolagem ou Page Up/Page Down para navegar em arquivos grandes",
                "üí° A barra de status sempre mostra o que est√° acontecendo na aplica√ß√£o",
                "üí° Todos os menus podem ser acessados tanto por mouse quanto por teclado",
                "üí° A aplica√ß√£o lembra das configura√ß√µes de cor e velocidade entre sess√µes",
                "üí° Use Escape para fechar di√°logos rapidamente",
                "üí° Mantenha arquivos de texto em formato UTF-8 para melhor compatibilidade"
        );
    }

    public static class ShortcutGroup {
        public final String title;
        public final java.awt.Color color;
        public final List<Shortcut> shortcuts;

        public ShortcutGroup(String title, java.awt.Color color, List<Shortcut> shortcuts) {
            this.title = title;
            this.color = color;
            this.shortcuts = shortcuts;
        }
    }

    public static class Shortcut {
        public final String key;
        public final String description;

        public Shortcut(String key, String description) {
            this.key = key;
            this.description = description;
        }
    }

    public static class FeatureHelp {
        public final String title;
        public final java.awt.Color color;
        public final List<String> items;

        public FeatureHelp(String title, java.awt.Color color, List<String> items) {
            this.title = title;
            this.color = color;
            this.items = items;
        }
    }
}
